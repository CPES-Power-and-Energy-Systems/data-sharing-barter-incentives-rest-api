stages:
  - lint
  - test

variables:
  DJANGO_APPLICATION_ENVIRONMENT: test
  POSTGRES_HOST: postgresql
  POSTGRES_PORT: 5432
  POSTGRES_DB: valorem
  POSTGRES_USER: valorem
  POSTGRES_PASSWORD: valorem
  POETRY_NO_INTERACTION: 1
  POETRY_VIRTUALENVS_CREATE: 'false'
  POETRY_CACHE_DIR: '/var/cache/pypoetry'
  POETRY_HOME: '/usr/local'

lint:
  stage: lint
  image: python:3.12
  script:
    - cd api
    - pip install poetry
    - poetry install --with test
    - flake8

test:
  stage: test
  image: python:3.12
  services:
    - name: postgres:12.0-alpine
      alias: postgresql
      variables:
        POSTGRES_DB: $POSTGRES_DB
        POSTGRES_USER: $POSTGRES_USER
        POSTGRES_PASSWORD: $POSTGRES_PASSWORD
  script:
    - cd api
    - python -m pip install --upgrade pip
    - pip install poetry
    - poetry install --with test
    - apt-get update && apt-get install -y postgresql-client
    - until pg_isready -h postgres -p 5432; do sleep 2; done
    - python manage.py migrate
    - pytest --cov