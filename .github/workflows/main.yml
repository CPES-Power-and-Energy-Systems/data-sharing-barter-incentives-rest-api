name: CI

on: [push]

env:
  DJANGO_APPLICATION_ENVIRONMENT: test
  POSTGRES_DB: valorem
  POSTGRES_USER: valorem
  POSTGRES_PASSWORD: valorem

jobs:
  lint:
      runs-on: ubuntu-latest
      
      steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          cd api
          pip install -r requirements.txt
          pip install flake8

      - name: Lint code
        run: |
          cd api
          flake8

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.0-alpine
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
  
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
  
      - name: Wait for PostgreSQL to become ready
        run: |
          sudo apt-get install -y postgresql-client
          until pg_isready -h localhost -p 5432; do sleep 2; done
  
      - name: Run Migrations
        run: |
          python manage.py migrate
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          
      - name: List Tables
        run: |
          echo ${{ env.POSTGRES_PASSWORD }} | psql -h localhost -U ${{ env.POSTGRES_USER }} -d ${{ env.POSTGRES_DB }} -c '\dt'
          
      - name: Run Tests
        run: |
          pytest --cov
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
