# Generated by Django 3.2 on 2021-12-18 00:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MarketBalance',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='users.user')),
                ('balance', models.FloatField(default=0.0)),
                ('total_payment', models.FloatField(default=0.0)),
                ('total_revenue', models.FloatField(default=0.0)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'market_balance',
            },
        ),
        migrations.CreateModel(
            name='MarketSession',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('session_number', models.IntegerField()),
                ('session_date', models.DateField(auto_now_add=True)),
                ('staged_ts', models.DateTimeField(auto_now_add=True, null=True)),
                ('open_ts', models.DateTimeField(blank=True, null=True)),
                ('close_ts', models.DateTimeField(blank=True, null=True)),
                ('launch_ts', models.DateTimeField(blank=True, null=True)),
                ('finish_ts', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('staged', 'Staged'), ('open', 'Open'), ('closed', 'Closed'), ('running', 'Running'), ('finished', 'Finished')], default='staged', max_length=10)),
                ('market_price', models.FloatField()),
                ('b_min', models.IntegerField()),
                ('b_max', models.IntegerField()),
                ('n_price_steps', models.IntegerField()),
                ('delta', models.FloatField()),
            ],
            options={
                'db_table': 'market_session',
                'unique_together': {('session_number', 'session_date')},
            },
        ),
        migrations.CreateModel(
            name='MarketSessionBid',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('max_payment', models.IntegerField()),
                ('bid_price', models.IntegerField()),
                ('gain_func', models.CharField(choices=[('mse', 'Mse'), ('rmse', 'Rmse'), ('mae', 'Mae')], default='rmse', max_length=100)),
                ('confirmed', models.BooleanField(default=False, null=True)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('has_forecasts', models.BooleanField(default=False)),
                ('market_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.marketsession')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.userresources')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'market_session_bid',
                'unique_together': {('market_session', 'user', 'resource')},
            },
        ),
        migrations.CreateModel(
            name='MarketWalletAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wallet_address', models.TextField(default=None, unique=True)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'market_wallet_address',
            },
        ),
        migrations.CreateModel(
            name='MarketSessionBidPayment',
            fields=[
                ('market_bid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='market_bid', serialize=False, to='market.marketsessionbid')),
                ('tangle_msg_id', models.TextField(unique=True)),
                ('is_solid', models.BooleanField(default=False)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'market_session_bid_payment',
            },
        ),
        migrations.CreateModel(
            name='MarketSessionFee',
            fields=[
                ('market_session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='market.marketsession')),
                ('amount', models.FloatField(default=0.0)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'market_session_fee',
            },
        ),
        migrations.CreateModel(
            name='MarketSessionPriceWeight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weights_p', models.FloatField()),
                ('market_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.marketsession')),
            ],
            options={
                'db_table': 'market_session_weights_p',
            },
        ),
        migrations.CreateModel(
            name='BalanceTransferOut',
            fields=[
                ('withdraw_transfer_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.IntegerField(default=0)),
                ('user_wallet_address', models.TextField()),
                ('tangle_msg_id', models.TextField()),
                ('is_solid', models.BooleanField(default=False)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'balance_transfer_out',
            },
        ),
        migrations.CreateModel(
            name='MarketSessionTransactions',
            fields=[
                ('tid', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.FloatField(default=0.0)),
                ('transaction_type', models.TextField(choices=[('payment', 'Payment'), ('revenue', 'Revenue'), ('transfer_in', 'Transfer In'), ('transfer_out', 'Transfer Out')])),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('market_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.marketsession')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.userresources')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'market_session_transactions',
                'unique_together': {('market_session', 'user', 'resource', 'transaction_type')},
            },
        ),
        migrations.CreateModel(
            name='MarketSessionBalance',
            fields=[
                ('bal_id', models.AutoField(primary_key=True, serialize=False)),
                ('session_balance', models.FloatField(default=0.0)),
                ('session_payment', models.FloatField(default=0.0)),
                ('session_revenue', models.FloatField(default=0.0)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('market_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.marketsession')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.userresources')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'market_session_balance',
                'unique_together': {('market_session', 'user', 'resource')},
            },
        ),
    ]
